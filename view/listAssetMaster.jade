doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        title Asset List
        link(href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet")
    body
        .container
            h2 Asset List

            .input-group.mb-3
                input.form-control(type="text" id="searchInput" placeholder="Search by model" aria-label="Search" aria-describedby="searchButton")
                .input-group-append
                    button.btn.btn-outline-secondary(type="button" id="searchButton") Search

            table#asset_table.table.table-striped
                thead
                    tr
                        th(scope="col") Asset ID
                        th(scope="col") Make
                        th(scope="col") Model
                        th(scope="col") Type
                        th(scope="col") Stock
                        th(scope="col") Status
                        //- th(scope="col") Actions // New column for action buttons
                tbody

        script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js")
        script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js")
        script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")

        div.modal.fade#editModal(tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true")
            div.modal-dialog(role="document")
                div.modal-content
                    div.modal-header
                        h5.modal-title#editModalLabel Edit Asset
                        button.close(type="button" data-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") &times;
                    div.modal-body
                        form#editForm(action="/api/editAssetMaster" method="post")
                            .form-group
                                label(for="asset_id") Asset id
                                input.form-control(type="text" name="asset_id" id="asset_id" readonly)
                            .form-group
                                label(for="asset_type_id") Asset Type
                                select.form-control(name="asset_type_id" id="asset_type_id" required)
                            .form-group
                                label(for="make") Make
                                input.form-control(type="text" name="make" id="make" required)
                            .form-group
                                label(for="model") Model
                                input.form-control(type="text" name="model" id="model" required)
                            .form-group
                                label(for="Stock") Stock
                                input.form-control(type="number" name="Stock" id="Stock" required)

                    div.modal-footer
                        button.btn.btn-secondary(type="button" data-dismiss="modal") Close
                        button.btn.btn-primary(type="submit" onclick="edit()") Save changes

        script.
            var masterData;
            function openEditModal(assetId) {
                const row = document.querySelector(`#asset_table tbody tr[data-asset-id="${assetId}"]`);
                console.log(row, assetId, "kljhgfd")
                fetch('http://localhost:4000/api/listassetMaster', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                    })
                    .then(response => response.json())
                    .then(data => {
                        let filterValue=data?.data?.find(asset => asset.asset_id === Number(assetId))
                        console.log(filterValue)
                        document.getElementById('editModalLabel').innerText = `Edit Asset ${assetId}`;
                        document.getElementById('editForm').setAttribute('action', `/api/editAssetMaster/${assetId}`);
                        document.querySelector('#editModal .modal-body #asset_id').value = filterValue?.asset_id; // Populate with asset name
                        document.querySelector('#editModal .modal-body #asset_type_id').value = filterValue?.asset_type_id; // Populate with asset type
                        document.querySelector('#editModal .modal-body #make').value = filterValue?.make; // Populate with make
                        document.querySelector('#editModal .modal-body #model').value = filterValue?.model; // Populate with model
                        document.querySelector('#editModal .modal-body #Stock').value = filterValue?.Stock; // Populate with stock
                        $('#editModal').modal('show');
                        })
                        .catch(error => console.error('Error fetching assets:', error));


                            }

            document.addEventListener('DOMContentLoaded', function() {
                fetchAssets();

                document.getElementById('searchButton').addEventListener('click', function() {
                    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
                    filterAssets(searchTerm);
                });

                document.addEventListener('click', function(event) {
                    if (event.target.classList.contains('edit-button')) {
                        const assetId = event.target.dataset.assetId;
                        openEditModal(assetId);
                    }
                });
            });

            function fetchAssets() {
                fetch('http://localhost:4000/api/listassetMaster', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                    })
                    .then(response => response.json())
                    .then(data => {
                        masterData=data?.data
                        console.log(data); 
                        populateTable(data?.data);
                    })
                    .catch(error => console.error('Error fetching assets:', error));
            }

            function populateTable(assets) {
                const tableBody = document.querySelector('#asset_table tbody');
                tableBody.innerHTML = '';
                assets.forEach(asset => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${asset.asset_id}</td>
                        <td>${asset.make}</td>
                        <td>${asset.model}</td>
                        <td>${asset.assetType?.Categorytype}</td>
                        <td>${asset.Stock ? asset.Stock : 0}</td>
                        <td>${asset.status}</td>
                        <td><button class="btn btn-primary edit-button" data-asset-id="${asset.asset_id}">Edit</button></td>
                    `;
                    tableBody.appendChild(row);
                });
            }

            function filterAssets(searchTerm) {
                const assets = document.querySelectorAll('#asset_table tbody tr');
                assets.forEach(asset => {
                    const model = asset.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    if (model.includes(searchTerm)) {
                        asset.style.display = 'table-row';
                    } else {
                        asset.style.display = 'none';
                    }
                });
            }
            function edit(){
                const assetId = document.querySelector('#asset_id').value;
                let filterValue=masterData?.find(asset => asset.asset_id === Number(assetId))

                const assetTypeId = document.querySelector('#asset_type_id').value;
                const make = document.querySelector('#make').value;
                const model = document.querySelector('#model').value;
                const stock = document.querySelector('#Stock').value;
                //- let filterValue=data?.data?.find(asset => asset.asset_id === Number(assetId))

                // Create payload object
                const payload = {
                assetId: filterValue?.uuid,
                asset_type_id: assetTypeId,
                make: make,
                model: model,
                Stock: stock
                };
                console.log(payload)
            fetch('http://localhost:4000/api/updateAssetMaster', {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(payload)
                })
                .then(response => response.json())
                .then(data => {
                    console.log(data); // Log data to console for debugging
                    populateTable(data?.data);
                })
                .catch(error => console.error('Error fetching assets:', error));
            }

            function fetchCategories() {
                fetch('http://localhost:4000/api/listCategory')
                    .then(response => response.json())
                    .then(data => {
                        console.log(data?.data);
                        const select = document.getElementById('asset_type_id');
                        select.innerHTML = ''; 
                        data?.data.forEach(category => {
                            const option = document.createElement('option');
                            option.value = category.uuid;
                            option.textContent = category.Categorytype;
                            select.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error fetching categories:', error));
            }

            document.addEventListener('DOMContentLoaded', fetchCategories());
                //- function edit{
                //-     console.log("kjhugytfgyhujiok")
                //- }
